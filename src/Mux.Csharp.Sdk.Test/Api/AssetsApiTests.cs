/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Mux.Csharp.Sdk.Client;
using Mux.Csharp.Sdk.Api;
// uncomment below to import models
//using Mux.Csharp.Sdk.Model;

namespace Mux.Csharp.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing AssetsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AssetsApiTests : IDisposable
    {
        private AssetsApi instance;

        public AssetsApiTests()
        {
            instance = new AssetsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AssetsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AssetsApi
            //Assert.IsType<AssetsApi>(instance);
        }

        /// <summary>
        /// Test CreateAsset
        /// </summary>
        [Fact]
        public void CreateAssetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAssetRequest createAssetRequest = null;
            //var response = instance.CreateAsset(createAssetRequest);
            //Assert.IsType<AssetResponse>(response);
        }

        /// <summary>
        /// Test CreateAssetPlaybackId
        /// </summary>
        [Fact]
        public void CreateAssetPlaybackIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //CreatePlaybackIDRequest createPlaybackIDRequest = null;
            //var response = instance.CreateAssetPlaybackId(ASSET_ID, createPlaybackIDRequest);
            //Assert.IsType<CreatePlaybackIDResponse>(response);
        }

        /// <summary>
        /// Test CreateAssetTrack
        /// </summary>
        [Fact]
        public void CreateAssetTrackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //CreateTrackRequest createTrackRequest = null;
            //var response = instance.CreateAssetTrack(ASSET_ID, createTrackRequest);
            //Assert.IsType<CreateTrackResponse>(response);
        }

        /// <summary>
        /// Test DeleteAsset
        /// </summary>
        [Fact]
        public void DeleteAssetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //instance.DeleteAsset(ASSET_ID);
        }

        /// <summary>
        /// Test DeleteAssetPlaybackId
        /// </summary>
        [Fact]
        public void DeleteAssetPlaybackIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //string PLAYBACK_ID = null;
            //instance.DeleteAssetPlaybackId(ASSET_ID, PLAYBACK_ID);
        }

        /// <summary>
        /// Test DeleteAssetTrack
        /// </summary>
        [Fact]
        public void DeleteAssetTrackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //string TRACK_ID = null;
            //instance.DeleteAssetTrack(ASSET_ID, TRACK_ID);
        }

        /// <summary>
        /// Test GetAsset
        /// </summary>
        [Fact]
        public void GetAssetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //var response = instance.GetAsset(ASSET_ID);
            //Assert.IsType<AssetResponse>(response);
        }

        /// <summary>
        /// Test GetAssetInputInfo
        /// </summary>
        [Fact]
        public void GetAssetInputInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //var response = instance.GetAssetInputInfo(ASSET_ID);
            //Assert.IsType<GetAssetInputInfoResponse>(response);
        }

        /// <summary>
        /// Test GetAssetPlaybackId
        /// </summary>
        [Fact]
        public void GetAssetPlaybackIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //string PLAYBACK_ID = null;
            //var response = instance.GetAssetPlaybackId(ASSET_ID, PLAYBACK_ID);
            //Assert.IsType<GetAssetPlaybackIDResponse>(response);
        }

        /// <summary>
        /// Test ListAssets
        /// </summary>
        [Fact]
        public void ListAssetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? page = null;
            //string liveStreamId = null;
            //string uploadId = null;
            //var response = instance.ListAssets(limit, page, liveStreamId, uploadId);
            //Assert.IsType<ListAssetsResponse>(response);
        }

        /// <summary>
        /// Test UpdateAsset
        /// </summary>
        [Fact]
        public void UpdateAssetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //UpdateAssetRequest updateAssetRequest = null;
            //var response = instance.UpdateAsset(ASSET_ID, updateAssetRequest);
            //Assert.IsType<AssetResponse>(response);
        }

        /// <summary>
        /// Test UpdateAssetMasterAccess
        /// </summary>
        [Fact]
        public void UpdateAssetMasterAccessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //UpdateAssetMasterAccessRequest updateAssetMasterAccessRequest = null;
            //var response = instance.UpdateAssetMasterAccess(ASSET_ID, updateAssetMasterAccessRequest);
            //Assert.IsType<AssetResponse>(response);
        }

        /// <summary>
        /// Test UpdateAssetMp4Support
        /// </summary>
        [Fact]
        public void UpdateAssetMp4SupportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ASSET_ID = null;
            //UpdateAssetMP4SupportRequest updateAssetMP4SupportRequest = null;
            //var response = instance.UpdateAssetMp4Support(ASSET_ID, updateAssetMP4SupportRequest);
            //Assert.IsType<AssetResponse>(response);
        }
    }
}
