/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Mux.Csharp.Sdk.Client;
using Mux.Csharp.Sdk.Api;
// uncomment below to import models
//using Mux.Csharp.Sdk.Model;

namespace Mux.Csharp.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing PlaybackRestrictionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PlaybackRestrictionsApiTests : IDisposable
    {
        private PlaybackRestrictionsApi instance;

        public PlaybackRestrictionsApiTests()
        {
            instance = new PlaybackRestrictionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PlaybackRestrictionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PlaybackRestrictionsApi
            //Assert.IsType<PlaybackRestrictionsApi>(instance);
        }

        /// <summary>
        /// Test CreatePlaybackRestriction
        /// </summary>
        [Fact]
        public void CreatePlaybackRestrictionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePlaybackRestrictionRequest createPlaybackRestrictionRequest = null;
            //var response = instance.CreatePlaybackRestriction(createPlaybackRestrictionRequest);
            //Assert.IsType<PlaybackRestrictionResponse>(response);
        }

        /// <summary>
        /// Test DeletePlaybackRestriction
        /// </summary>
        [Fact]
        public void DeletePlaybackRestrictionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string PLAYBACK_RESTRICTION_ID = null;
            //instance.DeletePlaybackRestriction(PLAYBACK_RESTRICTION_ID);
        }

        /// <summary>
        /// Test GetPlaybackRestriction
        /// </summary>
        [Fact]
        public void GetPlaybackRestrictionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string PLAYBACK_RESTRICTION_ID = null;
            //var response = instance.GetPlaybackRestriction(PLAYBACK_RESTRICTION_ID);
            //Assert.IsType<PlaybackRestrictionResponse>(response);
        }

        /// <summary>
        /// Test ListPlaybackRestrictions
        /// </summary>
        [Fact]
        public void ListPlaybackRestrictionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? limit = null;
            //var response = instance.ListPlaybackRestrictions(page, limit);
            //Assert.IsType<ListPlaybackRestrictionsResponse>(response);
        }

        /// <summary>
        /// Test UpdateReferrerDomainRestriction
        /// </summary>
        [Fact]
        public void UpdateReferrerDomainRestrictionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string PLAYBACK_RESTRICTION_ID = null;
            //UpdateReferrerDomainRestrictionRequest updateReferrerDomainRestrictionRequest = null;
            //var response = instance.UpdateReferrerDomainRestriction(PLAYBACK_RESTRICTION_ID, updateReferrerDomainRestrictionRequest);
            //Assert.IsType<PlaybackRestrictionResponse>(response);
        }
    }
}
