/*
 * Mux API
 *
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Mux.Csharp.Sdk.Client;
using Mux.Csharp.Sdk.Api;
// uncomment below to import models
//using Mux.Csharp.Sdk.Model;

namespace Mux.Csharp.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing LiveStreamsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LiveStreamsApiTests : IDisposable
    {
        private LiveStreamsApi instance;

        public LiveStreamsApiTests()
        {
            instance = new LiveStreamsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LiveStreamsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LiveStreamsApi
            //Assert.IsType<LiveStreamsApi>(instance);
        }

        /// <summary>
        /// Test CreateLiveStream
        /// </summary>
        [Fact]
        public void CreateLiveStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateLiveStreamRequest createLiveStreamRequest = null;
            //var response = instance.CreateLiveStream(createLiveStreamRequest);
            //Assert.IsType<LiveStreamResponse>(response);
        }

        /// <summary>
        /// Test CreateLiveStreamPlaybackId
        /// </summary>
        [Fact]
        public void CreateLiveStreamPlaybackIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //CreatePlaybackIDRequest createPlaybackIDRequest = null;
            //var response = instance.CreateLiveStreamPlaybackId(LIVE_STREAM_ID, createPlaybackIDRequest);
            //Assert.IsType<CreatePlaybackIDResponse>(response);
        }

        /// <summary>
        /// Test CreateLiveStreamSimulcastTarget
        /// </summary>
        [Fact]
        public void CreateLiveStreamSimulcastTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //CreateSimulcastTargetRequest createSimulcastTargetRequest = null;
            //var response = instance.CreateLiveStreamSimulcastTarget(LIVE_STREAM_ID, createSimulcastTargetRequest);
            //Assert.IsType<SimulcastTargetResponse>(response);
        }

        /// <summary>
        /// Test DeleteLiveStream
        /// </summary>
        [Fact]
        public void DeleteLiveStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //instance.DeleteLiveStream(LIVE_STREAM_ID);
        }

        /// <summary>
        /// Test DeleteLiveStreamPlaybackId
        /// </summary>
        [Fact]
        public void DeleteLiveStreamPlaybackIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //string PLAYBACK_ID = null;
            //instance.DeleteLiveStreamPlaybackId(LIVE_STREAM_ID, PLAYBACK_ID);
        }

        /// <summary>
        /// Test DeleteLiveStreamSimulcastTarget
        /// </summary>
        [Fact]
        public void DeleteLiveStreamSimulcastTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //string SIMULCAST_TARGET_ID = null;
            //instance.DeleteLiveStreamSimulcastTarget(LIVE_STREAM_ID, SIMULCAST_TARGET_ID);
        }

        /// <summary>
        /// Test DisableLiveStream
        /// </summary>
        [Fact]
        public void DisableLiveStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //var response = instance.DisableLiveStream(LIVE_STREAM_ID);
            //Assert.IsType<DisableLiveStreamResponse>(response);
        }

        /// <summary>
        /// Test EnableLiveStream
        /// </summary>
        [Fact]
        public void EnableLiveStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //var response = instance.EnableLiveStream(LIVE_STREAM_ID);
            //Assert.IsType<EnableLiveStreamResponse>(response);
        }

        /// <summary>
        /// Test GetLiveStream
        /// </summary>
        [Fact]
        public void GetLiveStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //var response = instance.GetLiveStream(LIVE_STREAM_ID);
            //Assert.IsType<LiveStreamResponse>(response);
        }

        /// <summary>
        /// Test GetLiveStreamPlaybackId
        /// </summary>
        [Fact]
        public void GetLiveStreamPlaybackIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //string PLAYBACK_ID = null;
            //var response = instance.GetLiveStreamPlaybackId(LIVE_STREAM_ID, PLAYBACK_ID);
            //Assert.IsType<GetLiveStreamPlaybackIDResponse>(response);
        }

        /// <summary>
        /// Test GetLiveStreamSimulcastTarget
        /// </summary>
        [Fact]
        public void GetLiveStreamSimulcastTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //string SIMULCAST_TARGET_ID = null;
            //var response = instance.GetLiveStreamSimulcastTarget(LIVE_STREAM_ID, SIMULCAST_TARGET_ID);
            //Assert.IsType<SimulcastTargetResponse>(response);
        }

        /// <summary>
        /// Test ListLiveStreams
        /// </summary>
        [Fact]
        public void ListLiveStreamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? page = null;
            //string streamKey = null;
            //LiveStreamStatus? status = null;
            //var response = instance.ListLiveStreams(limit, page, streamKey, status);
            //Assert.IsType<ListLiveStreamsResponse>(response);
        }

        /// <summary>
        /// Test ResetStreamKey
        /// </summary>
        [Fact]
        public void ResetStreamKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //var response = instance.ResetStreamKey(LIVE_STREAM_ID);
            //Assert.IsType<LiveStreamResponse>(response);
        }

        /// <summary>
        /// Test SignalLiveStreamComplete
        /// </summary>
        [Fact]
        public void SignalLiveStreamCompleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //var response = instance.SignalLiveStreamComplete(LIVE_STREAM_ID);
            //Assert.IsType<SignalLiveStreamCompleteResponse>(response);
        }

        /// <summary>
        /// Test UpdateLiveStream
        /// </summary>
        [Fact]
        public void UpdateLiveStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //UpdateLiveStreamRequest updateLiveStreamRequest = null;
            //var response = instance.UpdateLiveStream(LIVE_STREAM_ID, updateLiveStreamRequest);
            //Assert.IsType<LiveStreamResponse>(response);
        }

        /// <summary>
        /// Test UpdateLiveStreamEmbeddedSubtitles
        /// </summary>
        [Fact]
        public void UpdateLiveStreamEmbeddedSubtitlesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LIVE_STREAM_ID = null;
            //UpdateLiveStreamEmbeddedSubtitlesRequest updateLiveStreamEmbeddedSubtitlesRequest = null;
            //var response = instance.UpdateLiveStreamEmbeddedSubtitles(LIVE_STREAM_ID, updateLiveStreamEmbeddedSubtitlesRequest);
            //Assert.IsType<LiveStreamResponse>(response);
        }
    }
}
